// This file was generated by Rcpp::compileAttributes
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppEigen.h>
#include <Rcpp.h>

using namespace Rcpp;

// computeCombinations
long int computeCombinations(const long int n);
RcppExport SEXP npideal_computeCombinations(SEXP nSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< const long int >::type n(nSEXP);
    __result = Rcpp::wrap(computeCombinations(n));
    return __result;
END_RCPP
}
// votetest
List votetest(const IntegerMatrix& v1, const IntegerMatrix& v2, IntegerVector focus, long int numLegisShuffles, const long int numBootstrapSims);
RcppExport SEXP npideal_votetest(SEXP v1SEXP, SEXP v2SEXP, SEXP focusSEXP, SEXP numLegisShufflesSEXP, SEXP numBootstrapSimsSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< const IntegerMatrix& >::type v1(v1SEXP);
    Rcpp::traits::input_parameter< const IntegerMatrix& >::type v2(v2SEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type focus(focusSEXP);
    Rcpp::traits::input_parameter< long int >::type numLegisShuffles(numLegisShufflesSEXP);
    Rcpp::traits::input_parameter< const long int >::type numBootstrapSims(numBootstrapSimsSEXP);
    __result = Rcpp::wrap(votetest(v1, v2, focus, numLegisShuffles, numBootstrapSims));
    return __result;
END_RCPP
}
// rankAgreeR
NumericVector rankAgreeR(const IntegerMatrix& v, const long int i, const long int j);
RcppExport SEXP npideal_rankAgreeR(SEXP vSEXP, SEXP iSEXP, SEXP jSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< const IntegerMatrix& >::type v(vSEXP);
    Rcpp::traits::input_parameter< const long int >::type i(iSEXP);
    Rcpp::traits::input_parameter< const long int >::type j(jSEXP);
    __result = Rcpp::wrap(rankAgreeR(v, i, j));
    return __result;
END_RCPP
}
// voteest
NumericVector voteest(const IntegerMatrix& v, long int right, long int left, const long int maxLegisSamples);
RcppExport SEXP npideal_voteest(SEXP vSEXP, SEXP rightSEXP, SEXP leftSEXP, SEXP maxLegisSamplesSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< const IntegerMatrix& >::type v(vSEXP);
    Rcpp::traits::input_parameter< long int >::type right(rightSEXP);
    Rcpp::traits::input_parameter< long int >::type left(leftSEXP);
    Rcpp::traits::input_parameter< const long int >::type maxLegisSamples(maxLegisSamplesSEXP);
    __result = Rcpp::wrap(voteest(v, right, left, maxLegisSamples));
    return __result;
END_RCPP
}
